
server.port=9000
spring.application.name=oauth-service
jwt.secret=makeThisAVeryLongRandomStringAtLeast32Characters

# H2 Database Configuration
spring.datasource.url=jdbc:h2:mem:oauthdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update

# Enable H2 Console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=true


spring.security.user.name=admin
spring.security.user.password=admin

# Logging
logging.level.org.springframework.security=DEBUG



#spring.security.oauth2.authorizationserver.registered-clients.users-service.client-id=usersServiceClient
#spring.security.oauth2.authorizationserver.registered-clients.users-service.client-secret=usersServiceSecret
#spring.security.oauth2.authorizationserver.registered-clients.users-service.authorization-grant-types=client_credentials
#spring.security.oauth2.authorizationserver.registered-clients.users-service.scope=read






##To change authServer URL, but you also have to edit the /etc/hosts file on local machine
#spring.security.oauth2.authorizationserver.issuer=http://localhost:${server.port}
#
#oauth2.client-id=my-client-id
#oauth2.client-secret=my-secret
##oauth2.token-uri=http://localhost:9000/oauth/token
#
#
##spring.jpa.hibernate.ddl-auto=update
##spring.jpa.show-sql=true
##spring.datasource.driverClassName=org.h2.Driver
##spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
##spring.datasource.url=jdbc:h2:mem:testdb
##spring.h2.console.enabled=true
##spring.datasource.username=sa
##spring.datasource.password=p
##spring.jpa.defer-datasource-initialization=true
#
## Exclude DataSourceAutoConfiguration
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
#
## Prevent generating an embedded database
#spring.datasource.generate-unique-name=false
#
#
#spring.security.oauth2.authorizationserver.client.articles-client.registration.articles-client.client-id=articles-client
#spring.security.oauth2.authorizationserver.client.articles-client.registration.client-secret={noop}secret
#spring.security.oauth2.authorizationserver.client.articles-client.registration.client-name=Articles Client
#spring.security.oauth2.authorizationserver.client.articles-client.registration.client-authentication-methods=client_secret_basic
#spring.security.oauth2.authorizationserver.client.articles-client.registration.authorization-grant-types=authorization_code,refresh_token
#spring.security.oauth2.authorizationserver.client.articles-client.registration.redirect-uri=http://localhost:9000/login/oauth2/code/articles-client-oidc,http://localhost:9000/authorized
#spring.security.oauth2.authorizationserver.client.articles-client.registration.scopes=openid,articles.read
#
#logging.level.org.springframework.security=TRACE
#
#
##spring.security.oauth2.authorization-server.jwt.jwk-set-uri=http://localhost:9000/.well-known/jwks.json
### Make sure you have JWT signing configurations if needed
##spring.security.oauth2.authorizationserver.jwt.signing-key=your-secret-key
### Or configure your JWK endpoint if you're using public keys for JWT validation
##spring.security.oauth2.authorizationserver.jwt.jwk-set-uri=http://localhost:9000/.well-known/jwks.json
#
#
##base.prefix=spring.security.oauth2.authorizationserver.client.articles-client
#
##Auth server
##spring.security.oauth2.authorization-server.login-page-url=/login